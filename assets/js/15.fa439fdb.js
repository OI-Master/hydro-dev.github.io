(window.webpackJsonp=window.webpackJsonp||[]).push([[15],{197:function(t,s,a){"use strict";a.r(s);var n=a(3),e=Object(n.a)({},(function(){var t=this,s=t.$createElement,a=t._self._c||s;return a("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[a("h1",{attrs:{id:"测试数据格式"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#测试数据格式"}},[t._v("#")]),t._v(" 测试数据格式")]),t._v(" "),a("div",{staticClass:"custom-block tip"},[a("p",{staticClass:"custom-block-title"},[t._v("TIP")]),t._v(" "),a("p",[t._v("Vijos 格式的测试数据在 Hydro 仍然可用，但不再推荐使用。")])]),t._v(" "),a("h2",{attrs:{id:"自动模式"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#自动模式"}},[t._v("#")]),t._v(" 自动模式")]),t._v(" "),a("div",{staticClass:"custom-block tip"},[a("p",{staticClass:"custom-block-title"},[t._v("TIP")]),t._v(" "),a("p",[t._v("在新版本的 hydrooj 中，您可以直接选择文件并上传。"),a("br"),t._v("\n如果您真的有需要通过压缩包上传数据，您可以将压缩包命名为 "),a("code",[t._v("testdata.zip")]),t._v(" 并上传，hydrooj 将会帮您解压并上传。")])]),t._v(" "),a("p",[t._v("对于一般的题目，您只需提供 "),a("code",[t._v(".in")]),t._v(" 和 "),a("code",[t._v(".out/.ans")]),t._v(" 文件，以下是一个例子。")]),t._v(" "),a("div",{staticClass:"language-bash extra-class"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[t._v("喵? tree\n"),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v(".")]),t._v("\n├── a1.in\n├── a1.out\n├── a2.in\n├── a2.out\n├── a3.in\n└── a3.out\n")])])]),a("p",[t._v("测试数据将被自动识别，并使用 1s 256mb 的限制。")]),t._v(" "),a("h2",{attrs:{id:"使用配置文件"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#使用配置文件"}},[t._v("#")]),t._v(" 使用配置文件")]),t._v(" "),a("p",[t._v("上传 "),a("code",[t._v("config.yaml")]),t._v(" 文件即可，文件格式如下：")]),t._v(" "),a("div",{staticClass:"language-yaml extra-class"},[a("pre",{pre:!0,attrs:{class:"language-yaml"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 题目类型，可以为 default(比对输入输出，包括spj), submit_answer（提交答案）, interactive（交互题）")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("type")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" default\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 全局时空限制（此处的限制优先级低于测试点的限制）不填则使用默认值")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("time")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" 1s\n"),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("memory")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" 128m\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 输入输出文件名，需要标准IO则填null")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("filename")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token null important"}},[t._v("null")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 此部分设置当题目类型为default时生效")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 比较器类型，支持的值有 default, ccr, cena, hustoj, lemon, qduoj, syzoj, testlib")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("checker_type")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" default\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 比较器文件（当比较器类型不为default时填写）")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 文件路径（位于压缩包中的路径）  通过扩展名识别语言。C++用户请注意：扩展名应为 .cc 而非 .cpp")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("checker")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" chk.cc\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 此部分设置当题目类型为interactive时生效")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 交互器路径（位于压缩包中的路径）")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("interactor")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" interactor.cc\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# Extra files 额外文件")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# These files will be copied to the working directory 这些文件将被复制到工作目录。")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 提示：如果spj的编译需要其他文件（如testlib.h），请将其纳入judge_extra_files中。")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("user_extra_files")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" extra_input.txt\n"),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("judge_extra_files")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" extra_file.txt\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# Test Cases 测试数据列表")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# If neither CASES or SUBTASKS are set(or config.yaml doesn't exist), judge will try to locate them automaticly.")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 如果 CASES 和 SUBTASKS 都没有设置或 config.yaml 不存在， 系统会自动尝试识别数据点。")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# We support these names for auto mode: 自动识别支持以下命名方式：")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 1. [name(optional)][number].(in/out/ans)         RegExp: /^([a-zA-Z]*)([0-9]+).in$/")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#   examples: ")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#     - c1.in / c1.out")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#     - 1.in / 1.out")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#     - c1.in / c1.ans")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 2. input[number].txt / output[number].txt        RegExp: /^(input)([0-9]+).txt$/")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#   - example: input1.txt / input2.txt")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# The CASES option has higher priority than the SUBTASKS option!")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 在有 CASES 设置项时，不会读取 SUBTASKS 设置项！")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("score")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("50")]),t._v("     "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 单个测试点分数")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("time")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" 1s      "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 时间限制")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("memory")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" 256m  "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 内存限制")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("cases")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("input")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" abc.in\n    "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("output")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" def.out\n  "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("input")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" ghi.in\n    "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("output")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" jkl.out\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 或使用Subtask项：")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("subtasks")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("score")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("30")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("time")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" 1s\n    "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("memory")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" 64m\n    "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("cases")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n      "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("input")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" a.in\n        "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("output")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" a.out\n      "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("input")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" b.in\n        "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("output")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" b.out\n  "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("score")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("70")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("time")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" 0.5s\n    "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("memory")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" 32m\n    "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("if")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 可选，传入数组，表示仅在subtask0通过时此subtask才计分")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("cases")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n      "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("input")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" c.in\n        "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("output")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" c.out\n      "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("input")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" d.in\n        "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("output")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" d.out\n")])])]),a("p",[a("a",{attrs:{href:"https://undefined.moe/hydro/testdata_spj_example.zip",target:"_blank",rel:"noopener noreferrer"}},[t._v("Special Judge样例数据包下载"),a("OutboundLink")],1)])])}),[],!1,null,null,null);s.default=e.exports}}]);